{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABC\\\\Desktop\\\\utkarh\\\\shop\\\\clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.components\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { withSpinner } from \"../../components/with-spinner/with-spinner.component\";\nimport { updateCollection } from \"../../redux/shop/shop.actions\";\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollection\n    } = this.props;\n    const collectionRef = firestore.collection('collection');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshop => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshop);\n      updateCollection(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: collectionMap => dispatch(updateCollection(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/ABC/Desktop/utkarh/shop/clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","withSpinner","updateCollection","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshop","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,uEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAqBC,+BAArB,QAA4D,+BAA5D;AAEA,SAAQC,WAAR,QAA2B,sDAA3B;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,MAAMC,6BAA6B,GAAGF,WAAW,CAACJ,kBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGH,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAC;AADF,KAD6B;AAAA,SAMrCC,uBANqC,GAMX,IANW;AAAA;;AAQrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACR,MAAAA;AAAD,QAAqB,KAAKS,KAAhC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,YAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAb,MAAAA,gBAAgB,CAACc,cAAD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJ8B,CAA/B;AAKD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AA/BoC;;AAkCvC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,gBAAgB,EAAGqB,aAAa,IAAID,QAAQ,CAACpB,gBAAgB,CAACqB,aAAD,CAAjB;AADN,CAAL,CAAnC;;AAIA,eAAe3B,OAAO,CAAC,IAAD,EAAMyB,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.components\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport { firestore , convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\nimport {withSpinner } from \"../../components/with-spinner/with-spinner.component\";\n\nimport { updateCollection } from \"../../redux/shop/shop.actions\";\n\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading:true\n  }\n\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const {updateCollection} = this.props;\n    const collectionRef = firestore.collection('collection');\n    \n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshop => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshop);\n      updateCollection(collectionsMap);\n      this.setState({ loading: false });\n    })\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props} />} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection : collectionMap => dispatch(updateCollection(collectionMap))\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}