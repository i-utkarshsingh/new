{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collection\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshop => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshop);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/ABC/Desktop/utkarh/shop/clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshop","collectionsMap","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAqBC,+BAArB,QAA4D,+BAA5D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,aAAa,KAAK;AACtDH,EAAAA,IAAI,EAACJ,eAAe,CAACQ,yBADiC;AAEtDC,EAAAA,OAAO,EAACF;AAF8C,CAAL,CAA5C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAACJ,eAAe,CAACY,yBADiC;AAEtDH,EAAAA,OAAO,EAACE;AAF8C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACc,cAAD,CAAvB,CAAR;AACD,KAHD,EAGGC,KAHH,CAGSC,KAAK,IAAIR,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAID,GARD;AASD,CAVM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\n\r\nimport { firestore , convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionSuccess = collectionMap => ({\r\n  type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload:collectionMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload:errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collection\");\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef.get().then(async (snapshop) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshop);\r\n      dispatch(fetchCollectionSuccess(collectionsMap));\r\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}